---
apiVersion: v1
items:
- apiVersion: v1
  data:
    enmasse-instance-infra.json: '{"apiVersion": "v1", "kind": "Template", "metadata":
      {"labels": {"app": "enmasse"}, "name": "enmasse-instance-infra"}, "objects":
      [{"apiVersion": "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse", "name": "qdrouterd"},
      "name": "qdrouterd"}, "spec": {"replicas": 1, "template": {"metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse", "capability":
      "router", "name": "qdrouterd"}}, "spec": {"containers": [{"env": [{"name": "LINK_CAPACITY",
      "value": "${ROUTER_LINK_CAPACITY}"}], "image": "${ROUTER_REPO}", "livenessProbe":
      {"tcpSocket": {"port": "amqp"}}, "name": "router", "ports": [{"containerPort":
      5672, "name": "amqp", "protocol": "TCP"}, {"containerPort": 55673, "name": "internal",
      "protocol": "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol": "TCP"}],
      "volumeMounts": [{"mountPath": "/etc/qpid-dispatch/ssl", "name": "ssl-certs",
      "readOnly": true}]}, {"image": "${ROUTER_METRICS_REPO}", "livenessProbe": {"tcpSocket":
      {"port": "metrics"}}, "name": "metrics", "ports": [{"containerPort": 8080, "name":
      "metrics", "protocol": "TCP"}], "resources": {"limits": {"memory": "32Mi"},
      "requests": {"memory": "32Mi"}}}], "volumes": [{"configMap": {"name": "hawkular-router-config"},
      "name": "hawkular-openshift-agent"}, {"name": "ssl-certs", "secret": {"secretName":
      "${ROUTER_SECRET}"}}]}}}}, {"apiVersion": "v1", "kind": "Service", "metadata":
      {"annotations": {"addressSpace": "${ADDRESS_SPACE}", "service.alpha.openshift.io/dependencies":
      "[{\"kind\": \"Service\", \"name\": \"queue-scheduler\", \"namespace\": \"\"},
      {\"kind\": \"Service\", \"name\": \"configuration\", \"namespace\": \"\"}, {\"kind\":
      \"Service\", \"name\": \"ragent\", \"namespace\": \"\"}, {\"kind\": \"Service\",
      \"name\": \"console\", \"namespace\": \"\"}, {\"kind\": \"Service\", \"name\":
      \"subscription\", \"namespace\": \"\"}, {\"kind\": \"Service\", \"name\": \"mqtt\",
      \"namespace\": \"\"}]", "service.alpha.openshift.io/infrastructure": "true"},
      "labels": {"app": "enmasse"}, "name": "messaging"}, "spec": {"ports": [{"name":
      "amqp", "port": 5672, "protocol": "TCP", "targetPort": 5672}, {"name": "amqps",
      "port": 5671, "protocol": "TCP", "targetPort": 5671}, {"name": "internal", "port":
      55673, "protocol": "TCP", "targetPort": 55673}, {"name": "inter-router", "port":
      55672, "protocol": "TCP", "targetPort": 55672}], "selector": {"capability":
      "router"}}}, {"apiVersion": "extensions/v1beta1", "kind": "Deployment", "metadata":
      {"annotations": {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse",
      "name": "subserv"}, "name": "subserv"}, "spec": {"replicas": 1, "template":
      {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"}, "labels":
      {"app": "enmasse", "name": "subserv"}}, "spec": {"containers": [{"env": [ ],
      "image": "${SUBSERV_REPO}", "livenessProbe": {"tcpSocket": {"port": "amqp"}},
      "name": "subserv", "ports": [{"containerPort": 5672, "name": "amqp", "protocol":
      "TCP"}], "resources": {"limits": {"memory": "64Mi"}, "requests": {"memory":
      "64Mi"}}}]}}}}, {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse"}, "name":
      "subscription"}, "spec": {"ports": [{"name": "amqp", "port": 5672, "protocol":
      "TCP", "targetPort": 5672}], "selector": {"name": "subserv"}}}, {"apiVersion":
      "extensions/v1beta1", "kind": "Deployment", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse", "name": "mqtt-gateway"}, "name":
      "mqtt-gateway"}, "spec": {"replicas": 1, "template": {"metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}"}, "labels": {"app": "enmasse", "name": "mqtt-gateway"}},
      "spec": {"containers": [{"image": "${MQTT_GATEWAY_REPO}", "livenessProbe": {"initialDelaySeconds":
      60, "tcpSocket": {"port": "secure-mqtt"}}, "name": "mqtt-gateway-tls", "ports":
      [{"containerPort": 8883, "name": "secure-mqtt", "protocol": "TCP"}], "volumeMounts":
      [{"mountPath": "/etc/mqtt-gateway/ssl", "name": "ssl-certs", "readOnly": true}]},
      {"image": "${MQTT_GATEWAY_REPO}", "livenessProbe": {"initialDelaySeconds": 60,
      "tcpSocket": {"port": "mqtt"}}, "name": "mqtt-gateway", "ports": [{"containerPort":
      1883, "name": "mqtt", "protocol": "TCP"}]}], "volumes": [{"name": "ssl-certs",
      "secret": {"secretName": "${MQTT_SECRET}"}}]}}}}, {"apiVersion": "v1", "kind":
      "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse"}, "name": "mqtt"}, "spec": {"ports": [{"name": "mqtt",
      "port": 1883, "protocol": "TCP", "targetPort": 1883}, {"name": "secure-mqtt",
      "port": 8883, "protocol": "TCP", "targetPort": 8883}], "selector": {"name":
      "mqtt-gateway"}, "type": "ClusterIP"}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "mqtt-lwt"}, "name": "mqtt-lwt"}, "spec":
      {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "mqtt-lwt"}}, "spec": {"containers": [{"image":
      "${MQTT_LWT_REPO}", "name": "mqtt-lwt"}]}}}}, {"apiVersion": "v1", "data": {"hawkular-openshift-agent":
      "{\"endpoints\": [{\"collection_interval\": \"60s\", \"metrics\": [{\"id\":
      \"broker.threadCount\", \"name\": \"java.lang:type=Threading#ThreadCount\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"threadCount\"},
      \"type\": \"counter\"}, {\"id\": \"broker.memoryHeapUsage\", \"name\": \"java.lang:type=Memory#HeapMemoryUsage#used\",
      \"tags\": {\"messagingComponent\": \"broker\", \"messagingMetricType\": \"heapUsage\"},
      \"type\": \"gauge\"}, {\"description\": \"Queue depth for ${address}\", \"id\":
      \"${address}.${queue}.${broker}.queueDepth\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#MessageCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"queueDepth\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}, {\"description\": \"Number of consumers for ${address}\",
      \"id\": \"${address}.${queue}.${broker}.numConsumers\", \"name\": \"org.apache.activemq.artemis:address=*,broker=*,component=addresses,queue=*,routing-type=*,subcomponent=queues#ConsumerCount\",
      \"tags\": {\"messagingAddress\": \"${address}\", \"messagingBroker\": \"{broker}\",
      \"messagingMetricType\": \"numConsumers\", \"messagingQueue\": \"${queue}\"},
      \"type\": \"gauge\"}], \"path\": \"/jolokia/\", \"port\": 8161, \"protocol\":
      \"http\", \"type\": \"jolokia\"}]}"}, "kind": "ConfigMap", "metadata": {"name":
      "hawkular-broker-config"}}, {"apiVersion": "v1", "data": {"hawkular-openshift-agent":
      "{\"endpoints\": [{\"collection_interval\": \"60s\", \"metrics\": [{\"id\":
      \"router.totalConnectionCount\", \"name\": \"totalConnectionCount\", \"tags\":
      {\"messagingComponent\": \"router\", \"messagingMetricType\": \"totalConnectionCount\"}},
      {\"id\": \"router.totalLinkCount\", \"name\": \"totalLinkCount\", \"tags\":
      {\"messagingComponent\": \"router\", \"messagingMetricType\": \"totalLinkCount\"}},
      {\"id\": \"router.producerCount\", \"name\": \"producerCount\", \"tags\": {\"messagingComponent\":
      \"router\", \"messagingMetricType\": \"producerCount\"}}, {\"id\": \"router.consumerCount\",
      \"name\": \"consumerCount\", \"tags\": {\"messagingComponent\": \"router\",
      \"messagingMetricType\": \"consumerCount\"}}], \"path\": \"/metrics/\", \"port\":
      8080, \"protocol\": \"http\", \"type\": \"prometheus\"}]}"}, "kind": "ConfigMap",
      "metadata": {"name": "hawkular-router-config"}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "admin"}, "name": "admin"}, "spec": {"replicas":
      1, "template": {"metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}"},
      "labels": {"app": "enmasse", "name": "admin"}}, "spec": {"containers": [{"env":
      [{"name": "CONFIGURATION_SERVICE_HOST", "value": "localhost"}, {"name": "CONFIGURATION_SERVICE_PORT",
      "value": "5672"}], "image": "${RAGENT_REPO}", "livenessProbe": {"tcpSocket":
      {"port": "amqp"}}, "name": "ragent", "ports": [{"containerPort": 55672, "name":
      "amqp", "protocol": "TCP"}], "resources": {"limits": {"memory": "64Mi"}, "requests":
      {"memory": "64Mi"}}}, {"env": [{"name": "CONFIGURATION_SERVICE_HOST", "value":
      "localhost"}, {"name": "CONFIGURATION_SERVICE_PORT", "value": "5672"}], "image":
      "${QUEUE_SCHEDULER_REPO}", "livenessProbe": {"tcpSocket": {"port": "amqp"}},
      "name": "queue-scheduler", "ports": [{"containerPort": 55667, "name": "amqp",
      "protocol": "TCP"}], "resources": {"limits": {"memory": "128Mi"}, "requests":
      {"memory": "128Mi"}}}, {"env": [{"name": "CONFIGURATION_SERVICE_HOST", "value":
      "localhost"}, {"name": "CONFIGURATION_SERVICE_PORT", "value": "5672"}, {"name":
      "ADDRESS_SPACE_SERVICE_HOST", "value": "${ADDRESS_SPACE_SERVICE_HOST}"}, {"name":
      "ADDRESS_SPACE", "value": "${ADDRESS_SPACE}"}], "image": "${CONSOLE_REPO}",
      "livenessProbe": {"httpGet": {"path": "/", "port": "http"}}, "name": "console",
      "ports": [{"containerPort": 8080, "name": "http", "protocol": "TCP"}, {"containerPort":
      56720, "name": "amqp-ws", "protocol": "TCP"}], "resources": {"limits": {"memory":
      "64Mi"}, "requests": {"memory": "64Mi"}}}, {"env": [ ], "image": "${CONFIGSERV_REPO}",
      "livenessProbe": {"tcpSocket": {"port": "amqp"}}, "name": "configserv", "ports":
      [{"containerPort": 5672, "name": "amqp", "protocol": "TCP"}], "resources": {"limits":
      {"memory": "256Mi"}, "requests": {"memory": "256Mi"}}}]}}}}, {"apiVersion":
      "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "service.alpha.openshift.io/serving-cert-secret-name": "ragent-certs"}, "labels":
      {"app": "enmasse"}, "name": "ragent"}, "spec": {"ports": [{"name": "amqp", "port":
      5672, "targetPort": 55672}], "selector": {"name": "admin"}}}, {"apiVersion":
      "v1", "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "service.alpha.openshift.io/serving-cert-secret-name": "configuration-certs"},
      "labels": {"app": "enmasse"}, "name": "configuration"}, "spec": {"ports": [{"name":
      "amqp", "port": 5672}], "selector": {"name": "admin"}}}, {"apiVersion": "v1",
      "kind": "Service", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "service.alpha.openshift.io/serving-cert-secret-name": "queue-scheduler-certs"},
      "labels": {"app": "enmasse"}, "name": "queue-scheduler"}, "spec": {"ports":
      [{"name": "amqp", "port": 5672, "targetPort": 55667}], "selector": {"name":
      "admin"}}}, {"apiVersion": "v1", "kind": "Service", "metadata": {"annotations":
      {"addressSpace": "${ADDRESS_SPACE}", "service.alpha.openshift.io/serving-cert-secret-name":
      "console-certs"}, "labels": {"app": "enmasse"}, "name": "console"}, "spec":
      {"ports": [{"name": "amqp-ws", "port": 5672, "targetPort": 56720}, {"name":
      "http", "port": 8080}], "selector": {"name": "admin"}}}], "parameters": [{"description":
      "Hostname where API server can be reached", "name": "ADDRESS_SPACE_SERVICE_HOST",
      "value": ""}, {"description": "The image to use for the router", "name": "ROUTER_REPO",
      {"description": "The image to use for the console", "name": "CONSOLE_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-console-openshift:latest"},
      {"description": "The hostname to use for the exposed route for messaging", "name":
      "MESSAGING_HOSTNAME"}, {"description": "The image to use for the MQTT gateway",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-interconnect-openshift:latest"}, {"description": "The image
      to use for the router metrics collector", "name": "ROUTER_METRICS_REPO", "value":
      "jboss-amqmaas-1-tech-preview/amqmaas10-routermetrics-openshift:latest"}, {"description": "The link
      capacity setting for router", "name": "ROUTER_LINK_CAPACITY", "value": "50"},
      {"description": "The image to use for the configuration service", "name": "CONFIGSERV_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-configserv-openshift:latest"}, {"description": "The
      docker image to use for the queue scheduler", "name": "QUEUE_SCHEDULER_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-queuescheduler-openshift:latest"}, {"description":
      "The image to use for the router agent", "name": "RAGENT_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-routeragent-openshift:latest"},
      {"description": "The image to use for the subscription services", "name": "SUBSERV_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-subscriptionservice-openshift:latest"}, {"description": "The image
      to use for the console", "name": "CONSOLE_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-console-openshift:latest"},
      {"description": "The hostname to use for the exposed route for messaging", "name":
      "MESSAGING_HOSTNAME"}, {"description": "The image to use for the MQTT gateway",
      "name": "MQTT_GATEWAY_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-mqttgateway-openshift:latest"},
      {"description": "The hostname to use for the exposed route for MQTT", "name":
      "MQTT_GATEWAY_HOSTNAME"}, {"description": "The hostname to use for the exposed
      route for the messaging console", "name": "CONSOLE_HOSTNAME"}, {"description":
      "The secret to mount for router private key and certificate", "name": "ROUTER_SECRET",
      "required": true}, {"description": "The secret to mount for MQTT private key
      and certificate", "name": "MQTT_SECRET", "required": true}, {"description":
      "The image to use for the MQTT LWT", "name": "MQTT_LWT_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-mqttlwt-openshift:latest"},
      {"description": "The address space this infrastructure is deployed for", "name":
      "ADDRESS_SPACE", "required": true}, {"description": "The image to use for the
      AMQP Kafka Bridge", "name": "AMQP_KAFKA_BRIDGE_REPO", "value": "jboss-amqmaas-1-tech-preview/amqp-kafka-bridge:latest"},
      {"description": "A list of host/port pairs to use for establishing the initial
      connection to the Kafka cluster", "name": "KAFKA_BOOTSTRAP_SERVERS"}]}'
    queue-inmemory.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "queue-inmemory"}, "objects": [{"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"}, "name": "${NAME}"},
      "spec": {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse",
      "name": "${NAME}", "role": "broker"}}, "spec": {"containers": [{"env": [{"name":
      "QUEUE_NAME", "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}],
      "image": "${BROKER_REPO}", "lifecycle": {"preStop": {"exec": {"command": ["/opt/artemis-shutdown-hook/bin/artemis-shutdown-hook"]}}},
      "livenessProbe": {"tcpSocket": {"port": "amqp"}}, "name": "broker", "ports":
      [{"containerPort": 5673, "name": "amqp"}, {"containerPort": 61616, "name": "core"},
      {"containerPort": 8161, "name": "jolokia"}], "readinessProbe": {"tcpSocket":
      {"port": "amqp"}}, "volumeMounts": [{"mountPath": "/var/run/artemis", "name":
      "vol-${NAME}"}]}], "volumes": [{"emptyDir": { }, "name": "vol-${NAME}"}, {"name":
      "ssl-certs", "secret": {"secretName": "${COLOCATED_ROUTER_SECRET}"}}, {"configMap":
      {"name": "hawkular-broker-config"}, "name": "hawkular-openshift-agent"}]}}}}],
      "parameters": [{"description": "Storage capacity required for volume claims",
      "name": "STORAGE_CAPACITY", "value": "2Gi"}, {"description": "The docker image
      to use for the message broker", "name": "BROKER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-broker-openshift:latest"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-topicforwarder-openshift:latest"}, {"description":
      "The image to use for the router", "name": "ROUTER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-interconnect-openshift:latest"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the queue", "name": "ADDRESS", "required": true}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}]}'
    queue-persisted.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "queue-persisted"}, "objects": [{"apiVersion": "v1",
      "kind": "PersistentVolumeClaim", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"},
      "name": "pvc-${NAME}"}, "spec": {"accessModes": ["ReadWriteMany"], "resources":
      {"requests": {"storage": "${STORAGE_CAPACITY}"}}}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"}, "name": "${NAME}"},
      "spec": {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse",
      "name": "${NAME}", "role": "broker"}}, "spec": {"containers": [{"env": [{"name":
      "QUEUE_NAME", "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}],
      "image": "${BROKER_REPO}", "lifecycle": {"preStop": {"exec": {"command": ["/opt/artemis-shutdown-hook/bin/artemis-shutdown-hook"]}}},
      "livenessProbe": {"tcpSocket": {"port": "amqp"}}, "name": "broker", "ports":
      [{"containerPort": 5673, "name": "amqp"}, {"containerPort": 61616, "name": "core"},
      {"containerPort": 8161, "name": "jolokia"}], "readinessProbe": {"tcpSocket":
      {"port": "amqp"}}, "volumeMounts": [{"mountPath": "/var/run/artemis", "name":
      "vol-${NAME}"}]}], "volumes": [{"name": "vol-${NAME}", "persistentVolumeClaim":
      {"claimName": "pvc-${NAME}"}}, {"name": "ssl-certs", "secret": {"secretName":
      "${COLOCATED_ROUTER_SECRET}"}}, {"configMap": {"name": "hawkular-broker-config"},
      "name": "hawkular-openshift-agent"}]}}}}], "parameters": [{"description": "Storage
      capacity required for volume claims", "name": "STORAGE_CAPACITY", "value": "2Gi"},
      {"description": "The docker image to use for the message broker", "name": "BROKER_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-broker-openshift:latest"}, {"description": "The default
      image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-topicforwarder-openshift:latest"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "jboss-amqmaas-1-tech-preview/amqmaas10-interconnect-openshift:latest"}, {"description": "The link capacity
      setting for router", "name": "ROUTER_LINK_CAPACITY", "value": "50"}, {"description":
      "A valid addressSpace name for the address Space", "name": "ADDRESS_SPACE",
      "required": true}, {"description": "A valid name for the deployment", "name":
      "NAME", "required": true}, {"description": "A valid group id for the deployment",
      "name": "CLUSTER_ID", "required": true}, {"description": "The address to use
      for the queue", "name": "ADDRESS", "required": true}, {"description": "Name
      of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}]}'
    topic-inmemory.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "topic-inmemory"}, "objects": [{"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"}, "name": "${NAME}"},
      "spec": {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse",
      "name": "${NAME}", "role": "broker"}}, "spec": {"containers": [{"env": [{"name":
      "TOPIC_NAME", "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}],
      "image": "${BROKER_REPO}", "lifecycle": {"preStop": {"exec": {"command": ["/opt/artemis-shutdown-hook/bin/artemis-shutdown-hook"]}}},
      "livenessProbe": {"tcpSocket": {"port": "amqp"}}, "name": "broker", "ports":
      [{"containerPort": 5673, "name": "amqp"}, {"containerPort": 61616, "name": "core"},
      {"containerPort": 8161, "name": "jolokia"}], "readinessProbe": {"tcpSocket":
      {"port": "amqp"}}, "volumeMounts": [{"mountPath": "/var/run/artemis", "name":
      "vol-${NAME}"}]}, {"env": [{"name": "LINK_CAPACITY", "value": "${ROUTER_LINK_CAPACITY}"},
      {"name": "TOPIC_NAME", "value": "${ADDRESS}"}], "image": "${ROUTER_REPO}", "livenessProbe":
      {"tcpSocket": {"port": "amqp"}}, "name": "router", "ports": [{"containerPort":
      5672, "name": "amqp", "protocol": "TCP"}, {"containerPort": 55673, "name": "internal",
      "protocol": "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol": "TCP"}],
      "resources": {"limits": {"memory": "256Mi"}, "requests": {"memory": "256Mi"}},
      "volumeMounts": [{"mountPath": "/etc/qpid-dispatch/ssl", "name": "ssl-certs",
      "readOnly": true}]}, {"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${NAME}"}], "image": "${TOPIC_FORWARDER_REPO}",
      "livenessProbe": {"httpGet": {"path": "/health", "port": "health"}}, "name":
      "forwarder", "ports": [{"containerPort": 8080, "name": "health"}], "resources":
      {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}}}], "volumes":
      [{"emptyDir": { }, "name": "vol-${NAME}"}, {"name": "ssl-certs", "secret": {"secretName":
      "${COLOCATED_ROUTER_SECRET}"}}, {"configMap": {"name": "hawkular-broker-config"},
      "name": "hawkular-openshift-agent"}]}}}}], "parameters": [{"description": "Storage
      capacity required for volume claims", "name": "STORAGE_CAPACITY", "value": "2Gi"},
      {"description": "The docker image to use for the message broker", "name": "BROKER_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-broker-openshift:latest"}, {"description": "The default
      image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-topicforwarder-openshift:latest"},
      {"description": "The image to use for the router", "name": "ROUTER_REPO", "value":
      "jboss-amqmaas-1-tech-preview/amqmaas10-interconnect-openshift:latest"}, {"description": "The link capacity
      setting for router", "name": "ROUTER_LINK_CAPACITY", "value": "50"}, {"description":
      "A valid addressSpace name for the address Space", "name": "ADDRESS_SPACE",
      "required": true}, {"description": "A valid name for the deployment", "name":
      "NAME", "required": true}, {"description": "A valid group id for the deployment",
      "name": "CLUSTER_ID", "required": true}, {"description": "The address to use
      for the topic", "name": "ADDRESS", "required": true}, {"description": "Name
      of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}]}'
    topic-persisted.json: '{"apiVersion": "v1", "kind": "Template", "metadata": {"labels":
      {"app": "enmasse"}, "name": "topic-persisted"}, "objects": [{"apiVersion": "v1",
      "kind": "PersistentVolumeClaim", "metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"},
      "name": "pvc-${NAME}"}, "spec": {"accessModes": ["ReadWriteMany"], "resources":
      {"requests": {"storage": "${STORAGE_CAPACITY}"}}}}, {"apiVersion": "extensions/v1beta1",
      "kind": "Deployment", "metadata": {"annotations": {"addressSpace": "${ADDRESS_SPACE}",
      "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse"}, "name": "${NAME}"},
      "spec": {"replicas": 1, "template": {"metadata": {"annotations": {"addressSpace":
      "${ADDRESS_SPACE}", "cluster_id": "${CLUSTER_ID}"}, "labels": {"app": "enmasse",
      "name": "${NAME}", "role": "broker"}}, "spec": {"containers": [{"env": [{"name":
      "TOPIC_NAME", "value": "${ADDRESS}"}, {"name": "CLUSTER_ID", "value": "${CLUSTER_ID}"}],
      "image": "${BROKER_REPO}", "lifecycle": {"preStop": {"exec": {"command": ["/opt/artemis-shutdown-hook/bin/artemis-shutdown-hook"]}}},
      "livenessProbe": {"tcpSocket": {"port": "amqp"}}, "name": "broker", "ports":
      [{"containerPort": 5673, "name": "amqp"}, {"containerPort": 61616, "name": "core"},
      {"containerPort": 8161, "name": "jolokia"}], "readinessProbe": {"tcpSocket":
      {"port": "amqp"}}, "volumeMounts": [{"mountPath": "/var/run/artemis", "name":
      "vol-${NAME}"}]}, {"env": [{"name": "LINK_CAPACITY", "value": "${ROUTER_LINK_CAPACITY}"},
      {"name": "TOPIC_NAME", "value": "${ADDRESS}"}], "image": "${ROUTER_REPO}", "livenessProbe":
      {"tcpSocket": {"port": "amqp"}}, "name": "router", "ports": [{"containerPort":
      5672, "name": "amqp", "protocol": "TCP"}, {"containerPort": 55673, "name": "internal",
      "protocol": "TCP"}, {"containerPort": 5671, "name": "amqps", "protocol": "TCP"}],
      "resources": {"limits": {"memory": "256Mi"}, "requests": {"memory": "256Mi"}},
      "volumeMounts": [{"mountPath": "/etc/qpid-dispatch/ssl", "name": "ssl-certs",
      "readOnly": true}]}, {"env": [{"name": "TOPIC_NAME", "value": "${ADDRESS}"},
      {"name": "CLUSTER_ID", "value": "${NAME}"}], "image": "${TOPIC_FORWARDER_REPO}",
      "livenessProbe": {"httpGet": {"path": "/health", "port": "health"}}, "name":
      "forwarder", "ports": [{"containerPort": 8080, "name": "health"}], "resources":
      {"limits": {"memory": "128Mi"}, "requests": {"memory": "128Mi"}}}], "volumes":
      [{"name": "vol-${NAME}", "persistentVolumeClaim": {"claimName": "pvc-${NAME}"}},
      {"name": "ssl-certs", "secret": {"secretName": "${COLOCATED_ROUTER_SECRET}"}},
      {"configMap": {"name": "hawkular-broker-config"}, "name": "hawkular-openshift-agent"}]}}}}],
      "parameters": [{"description": "Storage capacity required for volume claims",
      "name": "STORAGE_CAPACITY", "value": "2Gi"}, {"description": "The docker image
      to use for the message broker", "name": "BROKER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-broker-openshift:latest"},
      {"description": "The default image to use as topic forwarder", "name": "TOPIC_FORWARDER_REPO",
      "value": "jboss-amqmaas-1-tech-preview/amqmaas10-topicforwarder-openshift:latest"}, {"description":
      "The image to use for the router", "name": "ROUTER_REPO", "value": "jboss-amqmaas-1-tech-preview/amqmaas10-interconnect-openshift:latest"},
      {"description": "The link capacity setting for router", "name": "ROUTER_LINK_CAPACITY",
      "value": "50"}, {"description": "A valid addressSpace name for the address Space",
      "name": "ADDRESS_SPACE", "required": true}, {"description": "A valid name for
      the deployment", "name": "NAME", "required": true}, {"description": "A valid
      group id for the deployment", "name": "CLUSTER_ID", "required": true}, {"description":
      "The address to use for the topic", "name": "ADDRESS", "required": true}, {"description":
      "Name of secret containing router key and certificate", "name": "COLOCATED_ROUTER_SECRET",
      "required": true}]}'
  kind: ConfigMap
  metadata:
    labels:
      app: enmasse
    name: enmasse-template-config
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: enmasse
      name: address-controller
    name: address-controller
  spec:
    replicas: 1
    template:
      metadata:
        labels:
          app: enmasse
          name: address-controller
      spec:
        containers:
        - env:
          - name: MULTIINSTANCE
            value: 'false'
          image: jboss-amqmaas-1-tech-preview/amqmaas10-addresscontroller-openshift:latest
          livenessProbe:
            tcpSocket:
              port: http
          name: address-controller
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8081
            name: https
            protocol: TCP
          - containerPort: 5672
            name: amqp
            protocol: TCP
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 256Mi
          volumeMounts:
          - mountPath: "/enmasse-templates"
            name: templates
          - mountPath: "/ssl-certs"
            name: ssl-certs
            readOnly: true
        serviceAccount: enmasse-service-account
        volumes:
        - configMap:
            name: enmasse-template-config
          name: templates
        - name: ssl-certs
          secret:
            secretName: address-controller-certs
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    labels:
      app: enmasse
    name: restapi
  spec:
    rules:
    - host: ''
      http:
        paths:
        - backend:
            serviceName: address-controller
            servicePort: 8080
          path: "/v1"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/serving-cert-secret-name: address-controller-certs
    labels:
      app: enmasse
    name: address-controller
  spec:
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    - name: https
      port: 8081
      protocol: TCP
      targetPort: https
    - name: amqp
      port: 5672
      protocol: TCP
      targetPort: amqp
    selector:
      name: address-controller
    type: ClusterIP
kind: List
